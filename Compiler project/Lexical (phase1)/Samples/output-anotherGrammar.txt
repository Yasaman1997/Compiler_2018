
 LEXER 
	RegEx	Token	AttVal

	program	PROGRAM_KW	-
	functionTest	IDENTIFIER	0
	;	;	-
	real	REAL_KW	-
	a	IDENTIFIER	1
	:=	ASSIGN_KW	-
	2.4	REAL_NUMBER	2.4
	,	,	-
	b	IDENTIFIER	2
	:=	ASSIGN_KW	-
	333.44532	REAL_NUMBER	333.44532
	,	,	-
	Result	IDENTIFIER	3
	;	;	-
	int	INTEGER_KW	-
	c	IDENTIFIER	4
	:=	ASSIGN_KW	-
	;	;	-
	bool	BOOL_KW	-
	flag	IDENTIFIER	5
	:=	ASSIGN_KW	-
	True	IDENTIFIER	6
	;	;	-
	function	FUNCTION_KW	-
	swap	IDENTIFIER	7
	(	(	-
	int	INTEGER_KW	-
	m	IDENTIFIER	8
	;	;	-
	real	REAL_KW	-
	a	IDENTIFIER	1
	,	,	-
	b	IDENTIFIER	2
	)	)	-
	:	:	-
	real	REAL_KW	-
	real	REAL_KW	-
	tempReal	IDENTIFIER	9
	;	;	-
	int	INTEGER_KW	-
	tempInt	IDENTIFIER	10
	:=	ASSIGN_KW	-
	,	,	-
	tempInt2	IDENTIFIER	11
	;	;	-
	bool	BOOL_KW	-
	tempBool	IDENTIFIER	12
	:=	ASSIGN_KW	-
	true	BOOL_CONSTANT	true
	;	;	-
	begin	BEGIN_KW	-
	case	CASE_KW	-
	m	IDENTIFIER	8
	:	:	-
	begin	BEGIN_KW	-
	tempReal	IDENTIFIER	9
	:=	ASSIGN_KW	-
	a	IDENTIFIER	1
	+	MATH_OP_KW	PLUS
	b	IDENTIFIER	2
	;	;	-
	a	IDENTIFIER	1
	:=	ASSIGN_KW	-
	tempReal	IDENTIFIER	9
	-	MATH_OP_KW	MINUS
	a	IDENTIFIER	1
	;	;	-
	b	IDENTIFIER	2
	:=	ASSIGN_KW	-
	tempReal	IDENTIFIER	9
	-	MATH_OP_KW	MINUS
	b	IDENTIFIER	2
	;	;	-
	return	RETURN_KW	-
	a	IDENTIFIER	1
	end	END_KW	-
	;	;	-
	:	:	-
	begin	BEGIN_KW	-
	if	IF_KW	-
	tempBool	IDENTIFIER	12
	or else	LOGIC_OP_KW	OR
	a	IDENTIFIER	1
	-	MATH_OP_KW	MINUS
	b	IDENTIFIER	2
	then	THEN_KW	-
	return	RETURN_KW	-
	a	IDENTIFIER	1
	else	ELSE_KW	-
	tempReal	IDENTIFIER	9
	:=	ASSIGN_KW	-
	b	IDENTIFIER	2
	;	;	-
	return	RETURN_KW	-
	tempReal	IDENTIFIER	9
	end	END_KW	-
	;	;	-
	:	:	-
	while	WHILE_KW	-
	tempInt	IDENTIFIER	10
	>	REL_OP_KW	GT
	do	DO_KW	-
	begin	BEGIN_KW	-
	tempReal	IDENTIFIER	9
	:=	ASSIGN_KW	-
	temp	IDENTIFIER	13
	*	MATH_OP_KW	MULT
	a	IDENTIFIER	1
	/	MATH_OP_KW	DIV
	b	IDENTIFIER	2
	-	MATH_OP_KW	MINUS
	tempReal	IDENTIFIER	9
	+	MATH_OP_KW	PLUS
	a	IDENTIFIER	1
	;	;	-
	tempInt	IDENTIFIER	10
	:=	ASSIGN_KW	-
	tempInt	IDENTIFIER	10
	-	MATH_OP_KW	MINUS
	end	END_KW	-
	;	;	-
	:	:	-
	begin	BEGIN_KW	-
	for	FOR_KW	-
	tempInt2	IDENTIFIER	11
	:=	ASSIGN_KW	-
	to	TO_KW	-
	tempInt2	IDENTIFIER	11
	:=	ASSIGN_KW	-
	tempInt	IDENTIFIER	10
	do	DO_KW	-
	tempBool	IDENTIFIER	12
	:=	ASSIGN_KW	-
	tempBool	IDENTIFIER	12
	and then	LOGIC_OP_KW	AND
	true	BOOL_CONSTANT	true
	or else	LOGIC_OP_KW	OR
	false	BOOL_CONSTANT	false
	and then	LOGIC_OP_KW	AND
	tempBool	IDENTIFIER	12
	end	END_KW	-
	;	;	-
	:	:	-
	return	RETURN_KW	-
	a	IDENTIFIER	1
	;	;	-
	end	END_KW	-
	;	;	-
	return	RETURN_KW	-
	b	IDENTIFIER	2
	end	END_KW	-
	;	;	-
	begin	BEGIN_KW	-
	while	WHILE_KW	-
	flag	IDENTIFIER	5
	#	REL_OP_KW	NE
	true	BOOL_CONSTANT	true
	do	DO_KW	-
	begin	BEGIN_KW	-
	Result	IDENTIFIER	3
	:=	ASSIGN_KW	-
	swap	IDENTIFIER	7
	(	(	-
	c	IDENTIFIER	4
	,	,	-
	a	IDENTIFIER	1
	,	,	-
	b	IDENTIFIER	2
	)	)	-
	;	;	-
	if	IF_KW	-
	Result	IDENTIFIER	3
	<	REL_OP_KW	LT
	2.45	REAL_NUMBER	2.45
	then	THEN_KW	-
	flag	IDENTIFIER	5
	:=	ASSIGN_KW	-
	false	BOOL_CONSTANT	false
	end	END_KW	-
	end	END_KW	-
	;	;	-
